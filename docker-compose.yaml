services:
  nginx:
    image: nginx:alpine
    container_name: budgetmate-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./landing/public:/usr/share/nginx/html:ro
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    command: ["nginx", "-g", "daemon off;"]
    networks:
      - frontend

  api:
    build:
      context: .
      dockerfile: ./api/Dockerfile
    container_name: budgetmate-api
    restart: unless-stopped
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${DB_HOST}:5432/${DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
    ports:
      - "8089:8080"
    networks:
      - backend
      - frontend

  db:
    image: postgres:alpine
    container_name: budgetmate-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./docker/initdb:/docker-entrypoint-initdb.d
    networks:
      - backend

volumes:
  db-data:

networks:
  backend:
  frontend: